process produceMuonFromPGun = 
{

  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
 
  # initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # XML geometry
  include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"

  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"


  service = RandomNumberGeneratorService
  {
    untracked uint32 sourceSeed = 98765
    PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 123456789
      }
  }

  source = FlatRandomPtGunSource 
  { 
    untracked uint32 firstRun  =  1
    untracked int32 maxEvents = 20
    untracked PSet PGunParameters =
    {
      untracked vint32  PartID = {13}
      untracked double MinEta = -1.2
      untracked double MaxEta =  1.2
      untracked double MinPhi = -3.14159265358979323846 # in radians
      untracked double MaxPhi =  3.14159265358979323846
      untracked double MinPt  =  9.99
      untracked double MaxPt  =  10.01
    }
    untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
  }
    
  # event vertex smearing
  module VtxSmeared = VertexGenerator
  {
     string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
     double MeanX = 0.
     double MeanY = 0.
     double MeanZ = 0.
     double SigmaX = 0.015
     double SigmaY = 0.015
     double SigmaZ = 53.0  // in mm (as in COBRA/OSCAR)
  }

  # include geant4 simulation
  include "SimG4Core/Application/data/SimG4Object.cfi"

  # Mixing Module is *required* to simulated Ecal/Hcal/Muon digitization !
  module mix = MixingModule
  {
    int32 bunchspace = 25
  }

  ### Muon-specific cfi

  ### DT

  # DT Geometry
  include "Geometry/DTGeometry/data/dtGeometry.cfi"

  # DT digis
  include "SimMuon/DTDigitizer/data/muondtdigi.cfi"

  module Out = PoolOutputModule
  { 
    untracked string fileName = "DTMuonDigi.root"
  }

  sequence sim = 
  {
    VtxSmeared,
    SimG4Object, 
    mix,
    muondtdigi
  }

  path p = 
  {
    sim
  }

  endpath e = 
  {
    Out
  }
}
